syntax = "proto3";

package messages;

option go_package = "/";

//
// Events
//
service EventStream {
  rpc StreamEvents(Session) returns (stream EventJson);
}

message EventJson {
  string session = 2;
  string event = 1;
  string data = 3;
}

service MessageService {
  //
  // Session management
  //
  rpc StartSession(StartSessionRequest) returns (Empty);
  rpc StopSession(Session) returns (Empty);
  rpc GetSessionState(Session) returns (SessionStateResponse);
  rpc RequestCode(PairCodeRequest) returns (PairCodeResponse);
  rpc Logout(Session) returns (Empty);
  //
  // Actions
  //
  rpc SendMessage (MessageRequest) returns (MessageResponse);
  rpc GetProfilePicture (ProfilePictureRequest) returns (ProfilePictureResponse);
}


//
// Session management
//
message PairCodeRequest {
  Session session = 1;
  string phone = 2;
}

message PairCodeResponse {
  string code = 1;
}

message Empty {}

enum LogLevel {
  TRACE = 0;
  DEBUG = 1;
  INFO = 2;
  WARN = 3;
  ERROR = 4;
}

message SessionLogConfig {
  LogLevel level = 1;
}

message SessionStoreConfig {
  string dialect = 2;
  string address = 3;
}

message SessionConfig {
  SessionStoreConfig store = 1;
  SessionLogConfig log = 2;
}

message StartSessionRequest {
  string id = 1;
  SessionConfig config = 2;
}
message SessionStateResponse {
  bool found = 1;
  bool connected = 2;
}

message Session {
  string id = 1;
}

//
// Actions
//
message MessageRequest {
  Session session = 1;
  string jid = 2;
  string text = 3;
}

message MessageResponse {
  string id = 1;
  int64 timestamp = 2;
}

message ProfilePictureRequest {
  Session session = 1;
  string jid = 2;
}
message ProfilePictureResponse {
  string url = 2;
}


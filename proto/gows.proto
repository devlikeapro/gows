syntax = "proto3";

package messages;

option go_package = "/";

//
// Events
//
service EventStream {
  rpc StreamEvents(Session) returns (stream EventJson);
}

message EventJson {
  string session = 2;
  string event = 1;
  string data = 3;
}

service MessageService {
  //
  // Session management
  //
  rpc StartSession(StartSessionRequest) returns (Empty);
  rpc StopSession(Session) returns (Empty);
  rpc GetSessionState(Session) returns (SessionStateResponse);
  rpc RequestCode(PairCodeRequest) returns (PairCodeResponse);
  rpc Logout(Session) returns (Empty);
  //
  // Actions
  //
  rpc SendMessage (MessageRequest) returns (MessageResponse);
  rpc SendReaction (MessageReaction) returns (MessageResponse);
  rpc GetProfilePicture (ProfilePictureRequest) returns (ProfilePictureResponse);
  rpc SendPresence(PresenceRequest) returns (Empty);
  rpc SendChatPresence(ChatPresenceRequest) returns (Empty);
  rpc SubscribePresence(SubscribePresenceRequest) returns (Empty);
  rpc MarkRead(MarkReadRequest) returns (Empty);
  //
  // Media
  //
  rpc DownloadMedia(DownloadMediaRequest) returns (DownloadMediaResponse);
}


//
// Session management
//
message PairCodeRequest {
  Session session = 1;
  string phone = 2;
}

message PairCodeResponse {
  string code = 1;
}

message Empty {}

enum LogLevel {
  TRACE = 0;
  DEBUG = 1;
  INFO = 2;
  WARN = 3;
  ERROR = 4;
}

message SessionLogConfig {
  LogLevel level = 1;
}

message SessionStoreConfig {
  string dialect = 2;
  string address = 3;
}

message SessionProxyConfig {
  string url = 1;
}

message SessionConfig {
  SessionStoreConfig store = 1;
  SessionLogConfig log = 2;
  SessionProxyConfig proxy = 3;
}

message StartSessionRequest {
  string id = 1;
  SessionConfig config = 2;
}
message SessionStateResponse {
  bool found = 1;
  bool connected = 2;
}

message Session {
  string id = 1;
}

//
// Actions
//
enum MediaType {
  IMAGE = 0;
  AUDIO = 1;
  VIDEO = 2;
  DOCUMENT = 3;
}

message AudioInfo {
  float duration = 1;
  bytes waveform = 2;
}

message Media {
  bytes content = 1;
  MediaType type = 2;
  string mimetype = 3;
  AudioInfo audio = 4;
}

message MessageRequest {
  Session session = 1;
  string jid = 2;
  string text = 3;
  Media media = 4;
}

message MessageReaction {
  Session session = 1;
  string jid = 2;
  string sender = 3;
  string messageId = 4;
  string reaction = 5;
}

message MessageResponse {
  string id = 1;
  int64 timestamp = 2;
}

message ProfilePictureRequest {
  Session session = 1;
  string jid = 2;
}
message ProfilePictureResponse {
  string url = 2;
}

enum Presence {
  AVAILABLE = 0;
  UNAVAILABLE = 1;
}

message PresenceRequest {
  Session session = 1;
  Presence status = 2;
}

enum ChatPresence {
  TYPING = 0;
  RECORDING = 1;
  PAUSED = 2;
}

message ChatPresenceRequest {
  Session session = 1;
  string jid = 2;
  ChatPresence status = 3;
}

message SubscribePresenceRequest {
  Session session = 1;
  string jid = 2;
}

enum ReceiptType {
  READ = 0;
  PLAYED = 1;
}

message MarkReadRequest {
  Session session = 1;
  string jid = 2;
  string sender = 3;
  string messageId = 4;
  ReceiptType type = 5;
}

//
// Media
//
message DownloadMediaRequest {
  Session session = 1;
  string message = 2; // JSON string
}

message DownloadMediaResponse {
  bytes content = 1;
}

